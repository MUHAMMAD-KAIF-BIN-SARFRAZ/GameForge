@using Markdig
@model GameForge.Models.ThreadPost

<div class="container mt-5">
    <!-- Parent Discussion Topic -->
    <div class="card mb-4 shadow">
        <div class="card-header bg-dark text-white">
            <h3 class="mb-0">@Model.ThreadTopic.Title</h3>
        </div>
        <div class="card-body d-flex">
            <!-- User Info -->
            <div class="text-center me-3" style="width: 120px;">
                <h6 class="mb-0">@Model.ThreadTopic.User.Username</h6>
                <small class="text-muted">Posted on <br>
                    <em>@Model.ThreadTopic.CreationDate.ToString("MMM dd, yyyy hh:mm tt")</em>
                </small>
            </div>

            <!-- Message Content -->
            <div class="flex-grow-1">
                <p class="fs-5">
                    @Html.Raw(Markdown.ToHtml(Model.ThreadTopic.Message))
                </p>
                <div class="mt-3">
                    @if (Model.ThreadTopic.Tag.Any())
                    {
                        @foreach (var tag in Model.ThreadTopic.Tag)
                        {
                            <span class="badge bg-primary me-1">@tag</span>
                        }
                    }
                    <span class="badge bg-secondary">Replies: @Model.ThreadTopic.NumberOfReplies</span>
                </div>
            </div>
        </div>
        <div class="card-footer text-end">
            <a asp-action="Edit" asp-route-id="@Model.ThreadTopic.ThreadTopicID" class="btn btn-warning btn-sm">
                <i class="bi bi-pencil-square"></i> Edit
            </a>
            @Html.ActionLink("Reply", "Create", "ThreadTopicReply", new
                {
                    ThreadTopicID = Model.ThreadTopic.ThreadTopicID
                }, new { @class = "btn btn-primary btn-sm" })
            <a asp-action="Index" class="btn btn-secondary btn-sm">
                <i class="bi bi-arrow-left"></i> Back to Threads
            </a>
        </div>
    </div>

<<<<<<< Updated upstream
    <!-- Replies Section -->
    <div class="mt-4">
        <h5 class="mb-4">Replies</h5>
        @if (Model.ThreadTopic.ThreadTopidcReplies != null && Model.ThreadTopic.ThreadTopidcReplies.Any())
        {
            @foreach (var reply in Model.ThreadTopic.ThreadTopidcReplies)
            {
                <div class="card mb-3 shadow-sm">
                    <div class="card-body d-flex">
                        <!-- Reply User Info -->
                        <div class="me-3 text-center" style="width: 120px;">
                            <h6 class="mb-0">@reply.User.Username</h6>
                            <small class="text-muted">Replied on <br>
                                <em>@reply.CreationDate.ToString("MMM dd, yyyy hh:mm tt")</em>
                            </small>
                        </div>

                        <!-- Reply Content -->
                        <div class="vr"></div>
                        <div class="flex-grow-1">
                            <div class="ml-5">
                                @Html.Raw(Markdown.ToHtml(reply.Message))
                                @if (reply.ParentReplyID != null)
                                {
                                    <small class="text-muted fst-italic" style="font-size: 0.9rem;">
                                        Replied to: @reply.ParentReplyID
                                    </small>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="card-footer d-flex justify-content-between align-items-center">
                        <div>
                            <small class="text-muted">Reply ID: @reply.ThreadTopicReplyID</small>
                        </div>
                        <div>
                            @Html.ActionLink("Edit","Edit","ThreadTopicReply",new 
                            {
                                ThreadTopicReplyID = reply.ThreadTopicReplyID
                                }, new { @class = "btn btn-warning btn-sm" })
                            @Html.ActionLink("Reply", "Create", "ThreadTopicReply", new
                                {
                                    ThreadTopicID = Model.ThreadTopic.ThreadTopicID,
                                    ParentReplyID = reply.ThreadTopicReplyID
                                }, new { @class = "btn btn-primary btn-sm" })
                        </div>
                    </div>
                </div>
            }
        }
        else
        {
            <p class="text-muted">No replies yet. Be the first to reply!</p>
        }
    </div>
=======
<div>
    <h4>ThreadTopic</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreationDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreationDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Message)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Message)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Tag)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Tag)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LatestReplyID)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LatestReplyID)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.LatestReplyTime)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.LatestReplyTime)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NumberOfReplies)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NumberOfReplies)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.User)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.User.Id)
        </dd>
    </dl>
</div>
<div>
    @Html.ActionLink("Edit", "Edit", new { /* id = Model.PrimaryKey */ }) |
    <a asp-action="Index">Back to List</a>
>>>>>>> Stashed changes
</div>


@section Styles
{
    <style>

        /* Card Styles */
        .card {
            border-radius: 10px;
            overflow: hidden;
            border: 1px solid #ddd;
            background-color: #ffffff;
        }

        .card-header {
            font-weight: bold;
            padding: 10px 15px;
        }

        .card-body {
            padding: 20px;
        }

        /* User Info Section */
        .card .text-center  {
            width: 100%;
            max-width: 80px;
            height: auto;
            margin-right: 50px;
        }

        .card .text-center h6 {
            margin-top: 10px;
            font-size: 1rem;
            color: #343a40;
        }

        .card .text-center small {
            color: #6c757d;
            font-size: 0.85rem;
        }

        /* Main Thread and Replies */
        .fs-5 {
            font-size: 1.25rem;
            color: #333;
        }

        .card-footer {
            background-color: #f8f9fa;
            padding: 10px 15px;
        }

        .badge {
            font-size: 0.85rem;
            margin-right: 5px;
        }

        /* Reply Section */
        .reply {
            border-left: 3px solid #007bff;
            padding-left: 15px;
        }

        /* Buttons */
        .btn-sm {
            font-size: 0.85rem;
            padding: 5px 10px;
        }

        .btn-primary {
            background-color: #007bff;
            border: none;
        }

        .btn-primary:hover {
            background-color: #0056b3;
        }

        .btn-warning {
            background-color: #ffc107;
            border: none;
            color: #212529;
        }

        .btn-warning:hover {
            background-color: #e0a800;
        }

        .btn-secondary {
            background-color: #6c757d;
            border: none;
        }

        .btn-secondary:hover {
            background-color: #5a6268;
        }
    </style>
} 
@model GameForge.Models.ThreadSearchViewModel

@* @{
    ViewData["Title"] = "Discussion Threads";
} *@

<h1 class="text-center my-4 text-primary">Discussion Threads</h1>

<div class="text-end mb-4">
    <a asp-action="Create" class="btn btn-primary btn-lg shadow-sm">
        <i class="bi bi-plus-circle me-2"></i>Create New Thread
    </a>
</div>


<form asp-controller="ThreadTopic" asp-action="Index" method="get">
    <p>
        <select asp-for="ThreadTag" asp-items="Model.Tags">
            <option value="">All</option>
        </select>
        <label>Title: <input type="text" asp-for="ThreadSearchString" value="@ViewData["CurrentFilter"]" /></label>
        <input type="submit" value="Filter" />
    </p>
</form>

<!-- Threads Table -->
<div class="table-responsive">
    @if (Model.ThreadTopics != null && Model.ThreadTopics.Any())
    {
        <table class="table table-hover table-striped align-middle shadow-sm">
            <thead class="table-primary">
                <tr>
                    <th>Title</th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParam"]"
                            asp-route-currentFilter="@ViewData["CurrentFilter"]"
                            asp-route-currentTag="@ViewData["CurrentTag"]" class="text-light">
                            Created On
                            <i class="bi bi-arrow-up-down"></i>
                        </a>
                    </th>
                    <th>
                        <a asp-action="Index" asp-route-sortOrder="@ViewData["NumRepliesSortParam"]"
                            asp-route-currentFilter="@ViewData["CurrentFilter"]"
                            asp-route-currentTag="@ViewData["CurrentTag"]" class="text-light">
                            Replies
                            <i class="bi bi-arrow-up-down"></i>
                        </a>
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var thread in Model.ThreadTopics)
                    {
                        <tr>
                            <td>
                                <a asp-action="Details" asp-route-id="@thread.ThreadTopicID"
                                    class="fw-bold text-primary text-decoration-none">
                                    @thread.Title
                                </a>
                            </td>
                            <td>@thread.CreationDate.ToString("MMM d, yyyy")</td>
                            <td>@thread.NumberOfReplies</td>
                        </tr>
                    }
            </tbody>
        </table>
    }
    else
        {
            <tr>
                <td colspan="8" class="text-center text-muted">
                    <i class="bi bi-info-circle"></i> No threads available. Be the first to
                    <a asp-action="Create" class="text-decoration-none">create one</a>!
                </td>
            </tr>
        }
</div>


<div class="d-flex justify-content-between mt-4">
    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-pageNumber="@(Model.ThreadTopics.PageIndex - 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        asp-route-currentTag="@ViewData["CurrentTag"]"
        class="btn btn-secondary @(!Model.ThreadTopics.HasPreviousPage ? "disabled" : "")">
        <i class="bi bi-arrow-left"></i> Previous
    </a>

    <a asp-action="Index" asp-route-sortOrder="@ViewData["CurrentSort"]"
        asp-route-pageNumber="@(Model.ThreadTopics.PageIndex + 1)"
        asp-route-currentFilter="@ViewData["CurrentFilter"]"
        asp-route-currentTag="@ViewData["CurrentTag"]"
        class="btn btn-secondary @(!Model.ThreadTopics.HasNextPage ? "disabled" : "")">
        Next <i class="bi bi-arrow-right"></i>
    </a>
</div>


@section Styles {
    <style>
        .table-hover tbody tr:hover {
            background-color: #f9f9f9;
            transition: background-color 0.2s;
        }

        .text-primary a:hover {
            text-decoration: underline;
            color: #0056b3;
        }

        .btn-outline-primary:hover {
            background-color: #0d6efd;
            color: white;
        }

        .btn-outline-danger:hover {
            background-color: #dc3545;
            color: white;
        }

        .badge {
            font-size: 0.9rem;
            padding: 0.4em 0.6em;
        }
    </style>
}

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
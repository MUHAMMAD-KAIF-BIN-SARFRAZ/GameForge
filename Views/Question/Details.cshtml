@using Markdig
@model GameForge.Models.QuestionPost

@{
    ViewData["Title"] = "Question Details";
}

<h1>@Model.Question.Title</h1>
<hr />

<!-- Question Details Section -->
<div class="d-flex">
    <!-- Upvote/Downvote Section -->
    <div class="text-center me-3">
        <button class="btn p-0" title="Upvote" onclick="QuestionVote(@Model.Question.QuestionID,true)">
            <svg width="24" height="24" fill="currentColor" class="bi bi-triangle-fill text-success">
                <polygon points="12,0 24,24 0,24"/>
            </svg>
        </button>
        <div class="fw-bold id="questionVoteCount">@(Model.Question.Upvotes-Model.Question.Downvotes)</div>
        <button class="btn p-0" title="Downvote" onclick="QuestionVote(@Model.Question.QuestionID,false)">
            <svg width="24" height="24" fill="currentColor" class="bi bi-triangle-fill text-danger" style="transform: rotate(180deg);">
    using System.Text.Encodings.Web;
                <polygon points="12,0 24,24 0,24"/>
            </svg>
        </button>
    </div>

    <!-- Question Text Section -->
    <div class="flex-grow-1">
        <p class="fs-5">
            @Html.Raw(Markdown.ToHtml(Model.Question.QuestionText))
        </p>
    </div>
    <div class="ms-3">
        @Html.ActionLink("Edit", "Edit", new { id = Model.Question.QuestionID }, new { @class = "btn btn-secondary" }) 
    </div>

</div>

<!-- User and Date Information -->
<div class="text-end text-muted mt-2">
    <small>Posted by @Model.Question.User.UserName on @Model.Question.CreationDate.ToString("MMM dd, yyyy")</small>
</div>

<hr />

<div class="mt-5">
    <h4>Answers</h4>
    @if (Model.Question.Answers != null && Model.Question.Answers.Any())
    {
        <hr />
        <div class="list-group">
            @foreach (var answer in Model.Question.Answers)
            {
                <div class="list-group-item mb-2 p-3 d-flex">
                    <!-- Upvote/Downvote Buttons on the Left -->
                    <div class="text-center me-3">
                        <button class="btn p-0" title="Upvote" onclick="AnswerVote(@Model.Question.QuestionID,@answer.UserID,true)">
                            <svg width="24" height="24" fill="currentColor" class="bi bi-triangle-fill text-success">
                                <polygon points="12,0 24,24 0,24"/>
                            </svg>
                        </button>
                        <div class="fw-bold" id=`answerVoteCount_${@answer.QuestionID}_${@answer.UserID}`>
                            @(answer.Upvotes - answer.Downvotes)
                        </div>
                        <button class="btn p-0" title="Downvote" onclick="AnswerVote(@Model.Question.QuestionID,@answer.UserID,false)">
                            <svg width="24" height="24" fill="currentColor" class="bi bi-triangle-fill text-danger" style="transform: rotate(180deg);">
                                <polygon points="12,0 24,24 0,24"/>
                            </svg>
                        </button>
                    </div>

                    <!-- Answer Content -->
                    <div class="flex-grow-1">
                        <p>@Html.DisplayFor(_ => answer.AnswerText)</p>
                        <div class="d-flex justify-content-between mt-3">
                            <small class="text-muted">Answered by @answer.User.UserName on @answer.CreationDate.ToString("MMM dd, yyyy")</small>
                        </div>
                    </div>

                    <!-- Conditional Edit Button -->
                    @if (Model.AnswerFlag)
                    {
                        <div class="ms-3">
                             @Html.ActionLink("Edit","Edit","Answer",new {QuestionID=answer.QuestionID,UserID=answer.UserID},new {@class="btn btn-secondary"})
                        </div>
                    }
                </div>
            }
        </div>
    }
    else
    {
        <p class="text-muted">No answers yet. Be the first to answer!</p>
    }
</div>
<!-- Link to Create Answer Page -->
@if (Model.AnswerFlag == false)
{
    <div class="mt-5">
        @Html.ActionLink("Write An Answer","Create","Answer", new {Model.Question.QuestionID}, new {@class="btn btn-secondary"})
    </div>
}


<!-- Navigation Links -->
<div class="mt-4">
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Styles {
    <style>
        /* Style for upvote and downvote buttons */
        .bi-triangle-fill {
            cursor: pointer;
            width: 1.5rem;
            height: 1.5rem;
        }
    </style>
}

@section Scripts{
    <script>
        function QuestionVote(QuestionID, type) {
            const url = "/Question/QuestionVote"

            let requestObj = {
                "QuestionID": QuestionID,
                "Type":type
            }
            $.ajax({
                   url: url,
                   type: 'POST',
                   contentType: 'application/json',
                   data: JSON.stringify(requestObj),
                   success: function(data) {
                       if (data.success) {
                           const voteCountElement = ` #questionVoteCount` ;
                           $(voteCountElement).html(`${data.upvotes} - ${data.downvotes}`);
                       } else {
                           alert(data.message); // Display message if user already voted
                       }
                   },
                   error: function(error) {
                       console.error("Error:", error);
                   }
               });
            window.location.href=window.location.href;
        }
        function AnswerVote(QuestionID,UserID,type){
            const url="/Answer/AnswerVote"

            let requestObj = {
                "QuestionID":QuestionID,
                "UserID":UserID,
                "Type":type
            }

            $.ajax({
                url:url,
                type:'POST',
                contentType:'application/json',
                data:JSON.stringify(requestObj),
                success:function(data){
                    if(data.success){
                        const voteCountElement=` #answerVoteCount_${QuestionID}_${UserID}`;
                        $(voteCountElement).html(`${data.upvotes}-${data.downvotes}`);
                    }else{
                        alert(data.message);
                    }
                },
                error:function(error){
                    console.log("Error",error);
                }
            })
        }
    </script>

    
}

